{"ast":null,"code":"var _jsxFileName = \"/home/sandesh/frontend/src/component/Login.js\",\n  _s = $RefreshSig$();\nimport { React, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport PlacementImg from \"./PlacementImg\";\nimport RegisterModal from \"./RegisterModal\";\nimport { Navigate, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst schema = yup.object({\n  username: yup.string().required(\"* username is required\"),\n  password: yup.string().required(\"* email is required\").min(8, \"* password should be atleast 8 digits\")\n}).required();\nconst Login = () => {\n  _s();\n  var _errors$username, _errors$password;\n  const navigate = useNavigate;\n  const defaultValues = {\n    username: \"\",\n    password: \"\",\n    remember: false\n  };\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(schema),\n    defaultValues\n  });\n  const onSubmit = data => {\n    console.log(\"dattu\", data);\n    navigate(\"/home\");\n  };\n\n  // modal workout\n  const [modalIsOpen, setIsOpen] = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logo\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"./images/logo--Gaggle.svg\",\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loginForm\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit(onSubmit),\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              ...register(\"username\"),\n              placeholder: \"Username \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: (_errors$username = errors.username) === null || _errors$username === void 0 ? void 0 : _errors$username.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              ...register(\"password\"),\n              placeholder: \"Password \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              ...register(\"remember\"),\n              id: \"r1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"r1\",\n              children: \"Remember me\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \" btn\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                children: \"Sign On\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"register\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              borderRight: \"1px solid #000\",\n              paddingRight: \"20px\"\n            },\n            onClick: () => setIsOpen(\"true\"),\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Forgot Password?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PlacementImg, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RegisterModal, {\n      modalIsOpen: modalIsOpen,\n      setIsOpen: setIsOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Login, \"BhRTTC+PL6RWRKtgGORso8v7OyI=\", false, function () {\n  return [useForm];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useForm","yupResolver","yup","PlacementImg","RegisterModal","Navigate","useNavigate","schema","object","username","string","required","password","min","Login","navigate","defaultValues","remember","register","handleSubmit","reset","formState","errors","resolver","onSubmit","data","console","log","modalIsOpen","setIsOpen","display","message","borderRight","paddingRight"],"sources":["/home/sandesh/frontend/src/component/Login.js"],"sourcesContent":["import { React, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport PlacementImg from \"./PlacementImg\";\nimport RegisterModal from \"./RegisterModal\";\nimport { Navigate, useNavigate } from \"react-router-dom\";\n\nconst schema = yup\n  .object({\n    username: yup.string().required(\"* username is required\"),\n    password: yup\n      .string()\n      .required(\"* email is required\")\n      .min(8, \"* password should be atleast 8 digits\"),\n  })\n  .required();\n\nconst Login = () => {\n  const navigate = useNavigate;\n  const defaultValues = {\n    username: \"\",\n    password: \"\",\n    remember: false,\n  };\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(schema),\n    defaultValues,\n  });\n\n  const onSubmit = (data) => {\n    console.log(\"dattu\", data);\n    navigate(\"/home\");\n  };\n\n  // modal workout\n  const [modalIsOpen, setIsOpen] = useState(false);\n\n  return (\n    <>\n      <div style={{ display: \"flex\" }}>\n        <div className=\"login\">\n          <div className=\"logo\">\n            <img src=\"./images/logo--Gaggle.svg\" alt=\"\" />\n          </div>\n          <div className=\"loginForm\">\n            <form onSubmit={handleSubmit(onSubmit)}>\n              <input {...register(\"username\")} placeholder=\"Username \" />\n              <p>{errors.username?.message}</p>\n              <input\n                type=\"text\"\n                {...register(\"password\")}\n                placeholder=\"Password \"\n              />\n              <p>{errors.password?.message}</p>\n              <input type=\"checkbox\" {...register(\"remember\")} id=\"r1\" />\n              <label for=\"r1\">Remember me</label>\n              <div className=\" btn\">\n                <button type=\"submit\">Sign On</button>\n              </div>\n            </form>\n          </div>\n\n          <div className=\"register\">\n            <p\n              style={{ borderRight: \"1px solid #000\", paddingRight: \"20px\" }}\n              onClick={() => setIsOpen(\"true\")}\n            >\n              Register\n            </p>\n            <p>Forgot Password?</p>\n          </div>\n        </div>\n        <PlacementImg />\n      </div>\n      <RegisterModal modalIsOpen={modalIsOpen} setIsOpen={setIsOpen} />\n    </>\n  );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}