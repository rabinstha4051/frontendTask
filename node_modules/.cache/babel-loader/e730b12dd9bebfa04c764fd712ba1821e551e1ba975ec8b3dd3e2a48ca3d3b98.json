{"ast":null,"code":"var _jsxFileName = \"/home/sandesh/frontend/src/component/Login.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport PlacementImg from \"./PlacementImg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = yup.object({\n  username: yup.string().required(\"* username is required\"),\n  password: yup.string().required(\"* email is required\").min(8, \"* password should be atleast 8 digits\")\n}).required();\nconst Login = () => {\n  _s();\n  var _errors$username, _errors$password;\n  const defaultValues = {\n    username: \"\",\n    password: \"\",\n    remember: false\n  };\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(schema),\n    defaultValues\n  });\n  const onSubmit = data => {\n    console.log(\"dattu\", data);\n  };\n\n  // modal workout\n\n  const [modalIsOpen, setIsOpen] = React.useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"./images/logo--Gaggle.svg\",\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loginForm\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit(onSubmit),\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            ...register(\"username\"),\n            placeholder: \"Username \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: (_errors$username = errors.username) === null || _errors$username === void 0 ? void 0 : _errors$username.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            ...register(\"password\"),\n            placeholder: \"Password \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            ...register(\"remember\"),\n            id: \"r1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"r1\",\n            children: \"Remember me\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \" btn\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Sign On\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"register\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            borderRight: \"1px solid #000\",\n            paddingRight: \"20px\"\n          },\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Forgot Password?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PlacementImg, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"BhRTTC+PL6RWRKtgGORso8v7OyI=\", false, function () {\n  return [useForm];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useForm","yupResolver","yup","PlacementImg","schema","object","username","string","required","password","min","Login","defaultValues","remember","register","handleSubmit","reset","formState","errors","resolver","onSubmit","data","console","log","modalIsOpen","setIsOpen","useState","display","message","borderRight","paddingRight"],"sources":["/home/sandesh/frontend/src/component/Login.js"],"sourcesContent":["import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport PlacementImg from \"./PlacementImg\";\n\nconst schema = yup\n  .object({\n    username: yup.string().required(\"* username is required\"),\n    password: yup\n      .string()\n      .required(\"* email is required\")\n      .min(8, \"* password should be atleast 8 digits\"),\n  })\n  .required();\n\nconst Login = () => {\n  const defaultValues = {\n    username: \"\",\n    password: \"\",\n    remember: false,\n  };\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(schema),\n    defaultValues,\n  });\n\n  const onSubmit = (data) => {\n    console.log(\"dattu\", data);\n  };\n\n  // modal workout\n\n  const [modalIsOpen, setIsOpen] = React.useState(false);\n  return (\n    <div style={{ display: \"flex\" }}>\n      <div className=\"login\">\n        <div className=\"logo\">\n          <img src=\"./images/logo--Gaggle.svg\" alt=\"\" />\n        </div>\n        <div className=\"loginForm\">\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <input {...register(\"username\")} placeholder=\"Username \" />\n            <p>{errors.username?.message}</p>\n            <input\n              type=\"text\"\n              {...register(\"password\")}\n              placeholder=\"Password \"\n            />\n            <p>{errors.password?.message}</p>\n            <input type=\"checkbox\" {...register(\"remember\")} id=\"r1\" />\n            <label for=\"r1\">Remember me</label>\n            <div className=\" btn\">\n              <button type=\"submit\">Sign On</button>\n            </div>\n          </form>\n        </div>\n\n        <div className=\"register\">\n          <p style={{ borderRight: \"1px solid #000\", paddingRight: \"20px\" }}>\n            Register\n          </p>\n          <p>Forgot Password?</p>\n        </div>\n      </div>\n      <PlacementImg />\n    </div>\n  );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}